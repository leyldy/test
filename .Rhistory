guides(fill = F) +
geom_bar(stat = 'identity') + ggtitle(paste("Average Quotes by", x1))
return(plot_graph)
}
cat_data <- data_out(joined, "category_name")
p1 <- plot_out(cat_data, "category_name")
o1
p1
far_data <- data_out(joined, "how_far")
p2 <- plot_out(far_data, "how_far") + coord_flip()
bath_data <- data_out(joined, "num_bathrooms")
p3 <- plot_out(bath_data, "num_bathrooms")
p2
p3
p2
p5
p6
p3
p2
clean_data <- data_out(joined, "num_bedrooms")
p4 <- plot_out(clean_data, "num_bedrooms")
p4
p1
p2
head(far_data)
far_data[length(how_far$far_data) > 0, ]
far_data[length(far_data$how_far) > 0, ]
far_data[1,1]
length(far_data[1,1])
far_data[length(far_data$how_far) > 1, ]
far_data[length(far_data$how_far) > 2, ]
length(far_data$how_far)
far_data$how_far
far_data[far_data$how_far != "", ]
bed_data <- data_out(joined, "num_bedrooms")
p4 <- plot_out(bed_data[far_data$how_far != "", ], "num_bedrooms")
bath_data <- data_out(joined, "num_bathrooms")
p3 <- plot_out(bath_data[far_data$how_far != "", ], "num_bathrooms")
far_data <- data_out(joined, "how_far")
p2 <- plot_out(far_data[far_data$how_far != "", ], "how_far") + coord_flip()
p2
p3
p4
p5
head(joined)
joined$num_quotes
table(joined$num_quotes)
library(gridE)
library(gridExtra)
grid.arrange(p1, p2, p3, p4 ncol = 2, main = "Main title")
grid.arrange(p1, p2, p3, p4, ncol = 2, main = "Main title")
library(grid)
library(gridExtra)
grid.arrange(p1, p2, p3, p4, ncol = 2, main = "Main title")
?grid.arrange
grid.arrange(p1, p2, p3, p4, ncol = 2, nrow = 2, main = "Main title")
p1
p5 = qplot(1:10, rnorm(10))
p6 = qplot(1:10, rnorm(10))
grid.arrange(p5, p7, ncol = 2, main = "Main title")
grid.arrange(p5, p6, ncol = 2, main = "Main title")
grid.arrange(p1, p2, p3, p4, ncol = 2, nrow = 2, top = "Main title")
grid.arrange(p1, p2, ncol = 2, top = "Main title")
grid.arrange(p1, p2, nrow = 2, top = "Main title")
grid.arrange(p1, p2, ncol = 2, top = "Main title")
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Documents/Jobs/Job Applications/Thumbtack")
# Chunk 2: data
quotes <- read.csv("quotes.csv", stringsAsFactors = F)
head(quotes)
visitors <- read.csv("visitors.csv", stringsAsFactors = F)
head(visitors)
# Chunk 3: 1a_dataprepare
visitors$session_date <- as.Date(visitors$session_date, format = "%m/%d")
head(visitors$session_date)
# Chunk 4: 1a_graph
library(ggplot2)
ggplot_1 <- ggplot(data = visitors, aes(x = session_date))
ggplot_1 +
geom_line(stat = 'count') +
labs(x = "Date (Year 2016)", y = "Number of visitors") +
ggtitle("Number of Visitors over Time")
# Chunk 5: 1a_weekday
weekdays(as.Date('07-08-2016', '%d-%m-%Y'))
# Chunk 6: 1b_datacheck
table(visitors$sent_request)
# Chunk 7: 1b
sum(visitors$sent_request) / nrow(visitors) * 100
# Chunk 8: 1c_visitors_cat
ggplot_1 +
geom_line(stat = 'count', aes(color = category_name)) +
facet_grid(category_name ~.) +
guides(color = F) +
labs(x = "Date (Year 2016)", y = "Number of visitors") +
ggtitle("Number of Visitors Over Time, Separated by Category")
# Chunk 9: 1c_visitors_device
ggplot_1 +
geom_line(stat = 'count', aes(color = device)) +
facet_grid(device ~.) +
guides(color = F) +
labs(x = "Date (Year 2016)", y = "Number of visitors") +
ggtitle("Number of Visitors Over Time, Separated by Device")
# Chunk 10: 1c_combined
ggplot_1 +
geom_line(stat = 'count') +
facet_grid(device ~ category_name) +
labs(x = "Date (Year 2016)", y = "Number of visitors") +
ggtitle("Number of Visitors Over Time, Separated by Device")
# Chunk 11: 1c_percent_cat
table(visitors$category_name) / nrow(visitors) * 100
# Chunk 12: 1c_percent_dev
table(visitors$device) / nrow(visitors) * 100
# Chunk 13: 1c_percent_comb
table(visitors$device, visitors$category_name) / nrow(visitors) * 100
# Chunk 14: 2a_reshape
library(dplyr)
grouped <-
quotes %>% group_by(., request_id) %>%
dplyr::summarise(., num_quotes = n_distinct(quote_id))
# Chunk 15: 2a_dist_quotes
ggplot2 <- ggplot(data = grouped, aes(x = num_quotes))
ggplot2 +
geom_histogram(bins = length(unique(grouped$num_quotes))) +
labs(x = "Number of Quotes", y = "Count of Requests") +
ggtitle("Distribution of Number of Quotes Per Request")
# Chunk 16: 2a_fivenumber
summary(grouped$num_quotes)
# Chunk 17: 2a_musd
mean(grouped$num_quotes)
sd(grouped$num_quotes)
# Chunk 18: join_in
table(grouped$request_id %in%
visitors[visitors$sent_request == 1, ]$request_id)
# Chunk 19: join_out
table(visitors[visitors$sent_request == 1, ]$request_id %in% grouped$request_id)
# Chunk 20: joining
joined <- dplyr::left_join(grouped,
visitors[visitors$sent_request == 1, ], by = "request_id")
# Chunk 21: function
data_out <- function(data, g){
output <-
data %>% dplyr::group_by_(., g) %>%
dplyr::summarize(., avg_quotes = sum(num_quotes) / length(num_quotes))
return(output)
}
plot_out <- function(d, x1, y1 = "avg_quotes"){
plot_graph <-
ggplot(data = d,
aes_string(x = x1, y = y1, fill = x1)) +
guides(fill = F) +
geom_bar(stat = 'identity') + ggtitle(paste("Average Quotes by", x1))
return(plot_graph)
}
# Chunk 22: 2b_save_gg
#Separated by Category
cat_data <- data_out(joined, "category_name")
p1 <- plot_out(cat_data, "category_name")
#Separated by How_Far for Moving
far_data <- data_out(joined, "how_far")
p2 <- plot_out(far_data[far_data$how_far != "", ], "how_far") + coord_flip()
#Separated by num_bathrooms for Cleaning
bath_data <- data_out(joined, "num_bathrooms")
p3 <- plot_out(bath_data[far_data$how_far != "", ], "num_bathrooms")
#Separated by num_bedrooms for Cleaning
bed_data <- data_out(joined, "num_bedrooms")
p4 <- plot_out(bed_data[far_data$how_far != "", ], "num_bedrooms")
library(grid)
library(gridExtra)
grid.arrange(p1, p2, p3, p4ncol = 2, top = "Main title")
library(grid)
library(gridExtra)
grid.arrange(p1, p2, p3, p4, ncol = 2, top = "Main title")
grid.arrange(p1, p2, p3, p4, ncol = 2, top = "Main title")
grid.arrange(p1, p2, ncol = 2)
p2
p3 <- plot_out(bath_data[far_data$how_far != "", ], "num_bathrooms")
p3
p4
p3
bathbath_data[far_data$how_far != "", ]
bath_data[far_data$how_far != "", ]
bath_data
cat_data <- data_out(joined, "category_name")
p1 <- plot_out(cat_data, "category_name")
far_data <- data_out(joined, "how_far")
p2 <- plot_out(far_data[far_data$how_far != "", ], "how_far") + coord_flip()
bath_data <- data_out(joined, "num_bathrooms")
p3 <- plot_out(bath_data[bath_data$num_bathrooms != "", ], "num_bathrooms")
bed_data <- data_out(joined, "num_bedrooms")
p4 <- plot_out(bed_data[bed_data$num_bedrooms != "", ], "num_bedrooms")
p3
p4
p5
p4
p5
p4
p3
p2
p1
p2
head(bath_data)
factor(num_bathrooms, levels = names(sort(table(avg_quotes))))
names(sort(table(bath_data$avg_quotes)))
table(bath_data$avg_quotes)
names(sort(avg_quotes)))
names(sort(avg_quotes))
names(sort(bat_data$avg_quotes))
names(sort(bath_data$avg_quotes))
library(grid)
library(gridExtra)
grid.arrange(p1, p2, ncol = 2)
grid.arrange(p3, p4, ncol = 2)
grid.arrange(p3, p4, nrow = 2)
quotes
head(quotes)
ggplot(data = quotes[!is.na(quotes$quote_price), ]) +
gg_density(aes(x = quote_price))
ggplot(data = quotes[!is.na(quotes$quote_price), ]) +
geom_density(aes(x = quote_price))
max(quotes$quote_price)
table(quotes$quote_price)
?geom_density
ggplot(data = quotes[!is.na(quotes$quote_price), ]) +
geom_density(aes(x = quote_price, fill = 'category_name'))
ggplot(data = quotes[!is.na(quotes$quote_price), ]) +
geom_density(aes(x = quote_price, fill = category_name))
head(quotes)
joined
head(quotes)
head(visitors)
?left_join
pdata_joined <- left_join(quotes, visitors[ ,c("category_name","request_id")],
by = "request_id")
head(pdata_joined)
head(quote)
head(quotes)
head(visitors)
head(pdata_joined)
ggplot(data = pdata_joined[!is.na(pdata_joined$quote_price), ]) +
geom_density(aes(x = quote_price, fill = category_name))
ggplot(data = pdata_joined[!is.na(pdata_joined$quote_price), ]) +
geom_density(aes(x = quote_price, fill = category_name), alpha = 0.5)
?geom_density
ggplot(data = pdata_joined[!is.na(pdata_joined$quote_price), ]) +
geom_hist(aes(x = quote_price, fill = category_name)) +
```
ggplot(data = pdata_joined[!is.na(pdata_joined$quote_price), ]) +
geom_hist(aes(x = quote_price, fill = category_name))
ggplot(data = pdata_joined[!is.na(pdata_joined$quote_price), ]) +
geom_histogram(aes(x = quote_price, fill = category_name))
ggplot(data = pdata_joined[!is.na(pdata_joined$quote_price), ]) +
geom_histogram(aes(x = quote_price, fill = category_name), alpha = 0.5)
ggplot(data = pdata_joined[!is.na(pdata_joined$quote_price), ]) +
geom_density(aes(x = quote_price, fill = category_name), alpha = 0.5)
summary(pdata_joined$quote_price)
summary(pdata_joined[!is.na(pdata_joined$quote_price), ])
summary(pdata_joined[!is.na(pdata_joined$quote_price), ]$quote_price)
summary(pdata_joined$quote_price)
??iqr
IQR(pdata_joined$quote_price)
IQR(rm.na(pdata_joined$quote_price))
IQR(na.omit(pdata_joined$quote_price))
IQR(na.omit(pdata_joined$quote_price)) * 1.5
ggplot(data = pdata_joined[!is.na(pdata_joined$quote_price), ]) +
geom_density(aes(x = quote_price, fill = category_name), alpha = 0.5) +
xlim(0, IQR(na.omit(pdata_joined$quote_price)) * 1.5 +
summary(pdata_joined$quote_price)[5])
outlier_limit <- IQR(na.omit(pdata_joined$quote_price)) * 1.5 +
summary(pdata_joined$quote_price)[5]
ggplot(data = pdata_joined[!is.na(pdata_joined$quote_price), ]) +
geom_density(aes(x = quote_price, fill = category_name), alpha = 0.5) +
xlim(0, 600)
ggplot(data = pdata_joined[!is.na(pdata_joined$quote_price), ]) +
geom_density(aes(x = quote_price, fill = category_name), alpha = 0.5) +
xlim(0, 1231)
ggplot(data = pdata_joined[!is.na(pdata_joined$quote_price), ]) +
geom_density(aes(x = quote_price, fill = category_name), alpha = 0.5) +
xlim(0, outlier_limit)
ggplot(data = pdata_joined[!is.na(pdata_joined$quote_price), ]) +
geom_histogram(aes(x = quote_price, fill = category_name), alpha = 0.5) +
xlim(0, outlier_limit) +
ggtitle("Distributions of Quote Prices separated by Category")
ggplot(data = pdata_joined[!is.na(pdata_joined$quote_price), ]) +
geom_density(aes(x = quote_price, fill = category_name), alpha = 0.5) +
xlim(0, outlier_limit) +
ggtitle("Distributions of Quote Prices separated by Category")
ggplot(data = pdata_joined[!is.na(pdata_joined$quote_price), ]) +
geom_histogram(aes(x = quote_price, fill = category_name), alpha = 0.5) +
xlim(0, outlier_limit) +
ggtitle("Distributions of Quote Prices separated by Category")
table(pdata_joined$quote_price)
table(pdata_joined$quote_price, decreasing = T)
sort(table(pdata_joined$quote_price), decreasing = T)
head(sort(table(pdata_joined$quote_price), decreasing = T))
ggplot(data = pdata_joined[!is.na(pdata_joined$quote_price), ]) +
geom_density(aes(x = quote_price, fill = category_name), alpha = 0.5) +
xlim(0, outlier_limit) +
ggtitle("Distributions of Quote Prices separated by Category")
ggplot(data = pdata_joined[!is.na(pdata_joined$quote_price), ]) + geom_boxplot(aes(x = quote_price, fill = category_name))
ggplot(data = pdata_joined[!is.na(pdata_joined$quote_price), ]) + geom_boxplot(aes(x = category_name, y = quote_price))
ggplot(data = pdata_joined[!is.na(pdata_joined$quote_price), ]) + geom_boxplot(aes(x = category_name, y = quote_price)) + ylim(0, outlier_limit)
ggplot(data = pdata_joined[!is.na(pdata_joined$quote_price), ]) + geom_boxplot(aes(x = category_name, y = quote_price, fill = category_name)) + ylim(0, outlier_limit)
?geom_boxplot
ggplot(data = pdata_joined[!is.na(pdata_joined$quote_price), ]) +
geom_density(aes(x = quote_price, fill = category_name), alpha = 0.5) +
xlim(0, outlier_limit) +
ggtitle("Distributions of Quote Prices separated by Category")
?legend
??ggplotlegend
ggplot(data = pdata_joined[!is.na(pdata_joined$quote_price), ]) +
geom_density(aes(x = quote_price, fill = category_name), alpha = 0.5) +
xlim(0, outlier_limit) +
ggtitle("Distributions of Quote Prices separated by Category") +
theme(legend = "bottom")
ggplot(data = pdata_joined[!is.na(pdata_joined$quote_price), ]) +
geom_density(aes(x = quote_price, fill = category_name), alpha = 0.5) +
xlim(0, outlier_limit) +
ggtitle("Distributions of Quote Prices separated by Category") +
theme(legend.position = "bottom")
head(quotes)
?filter
quotes %>% dplyr::group_by(., pro_id) %>%
filter(hired == 1) %>% summarise(., total = sum(quote_price))
quotes[quotes$pro_id == 19331, ]
pdata_joined
head(pdata_joined)
pdata_joined %>% dplyr::group_by(., pro_id) %>%
filter(hired == 1) %>% summarise(., total = sum(quote_price))
pdata_joined %>% dplyr::group_by(., pro_id)
3/5 + 3/6
6/11
pdata_joined %>% dplyr::group_by(., pro_id) %>%
filter(., hired == 1) %>% summarise(., count(request_id))
pdata_joined %>% dplyr::group_by(., pro_id) %>%
filter(., hired == 1) %>% dplyr::summarise(., count(request_id))
pdata_joined
head(pdata_joined)
pdata_joined %>% group_by(., pro_id)
pdata_joined %>% group_by(., pro_id) %>%
filter(., hired == 1) %>% dplyr::summarise(., count(request_id))
pdata_joined %>% group_by(., pro_id) %>%
filter(., hired == 1)
pdata_joined %>% group_by(., pro_id) %>%
filter(., hired == 1) %>% summarise(., n(request_id))
n
n()
?n
pdata_joined %>% group_by(., pro_id) %>%
filter(., hired == 1) %>% summarise(., n())
pdata_joined %>% group_by(., pro_id) %>%
filter(., hired == 1) %>% summarise(., num_hired = n())
hired <-
pdata_joined %>% group_by(., pro_id) %>%
filter(., hired == 1) %>% summarise(., num_hired = n())
hired <- mean(hired$num_hired)
hired
move_price <- hired * mean(pdata_joined$quote_price) * 0.05
move_price
move_price <- hired * mean(na.omit(pdata_joined$quote_price)) * 0.05
move_price
move_price
move_price <- hired * mean(na.omit(pdata_joined$quote_price)) * 0.03
move_price
head(quotes)
head(visitors)
table(visitors$sent_request)
head(quotes)
head(quotes, 20)
head(quotes, 30)
head(visitors)
?echo
??echo
knitr::opts_chunk$set(fig.width=8, fig.height=6, echo = F, results = 'hide',
warning = F)
setwd("~/Documents/Jobs/Job Applications/Thumbtack")
library(ggplot2)
library(dplyr)
library(grid)
library(gridExtra)
quotes <- read.csv("quotes.csv", stringsAsFactors = F)
visitors <- read.csv("visitors.csv", stringsAsFactors = F)
visitors$session_date <- as.Date(visitors$session_date, format = "%m/%d")
ggplot_1 <- ggplot(data = visitors, aes(x = session_date))
ggplot_1 +
geom_line(stat = 'count') +
labs(x = "Date (Year 2016)", y = "Number of visitors") +
ggtitle("Number of Visitors over Time")
head(visitors)
ggplot_1 <- ggplot(data = visitors, aes(x = session_date))
ggplot_1 +
geom_line(stat = 'count') +
labs(x = "Date (Year 2016)", y = "Number of visitors") +
ggtitle("Number of Visitors over Time")
ggplot_1 +
geom_line(stat = 'count') +
labs(x = "Date (Year 2016)", y = "Number of visitors") +
ggtitle("Number of Visitors over Time")
table(visitors$sent_request)
sum(visitors$sent_request) / nrow(visitors) * 100
sum(visitors$sent_request) / nrow(visitors) * 100
ggplot_1 +
geom_line(stat = 'count', aes(color = category_name)) +
facet_grid(category_name ~.) +
guides(color = F) +
labs(x = "Date (Year 2016)", y = "Number of visitors") +
ggtitle("Number of Visitors Over Time, Separated by Category")
ggplot_1 +
geom_line(stat = 'count') +
labs(x = "Date (Year 2016)", y = "Number of visitors") +
ggtitle("Number of Visitors over Time")
weekdays(as.Date('07-08-2016', '%d-%m-%Y'))
sum(visitors$sent_request) / nrow(visitors) * 100
ggplot_1 +
geom_line(stat = 'count', aes(color = device)) +
facet_grid(device ~.) +
guides(color = F) +
labs(x = "Date (Year 2016)", y = "Number of visitors") +
ggtitle("Number of Visitors Over Time, Separated by Device")
ggplot_1 +
geom_line(stat = 'count') +
facet_grid(device ~ category_name) +
labs(x = "Date (Year 2016)", y = "Number of visitors") +
ggtitle("Number of Visitors Over Time, Separated by Device")
table(visitors$category_name) / nrow(visitors) * 100
table(visitors$device) / nrow(visitors) * 100
table(visitors$device, visitors$category_name) / nrow(visitors) * 100
grouped <-
quotes %>% group_by(., request_id) %>%
dplyr::summarise(., num_quotes = n_distinct(quote_id))
ggplot2 <- ggplot(data = grouped, aes(x = num_quotes))
ggplot2 +
geom_histogram(bins = length(unique(grouped$num_quotes))) +
labs(x = "Number of Quotes", y = "Count of Requests") +
ggtitle("Distribution of Number of Quotes Per Request")
grouped
head(grouped)
length(unique(grouped$num_quotes))
summary(grouped$num_quotes)
mean(grouped$num_quotes)
sd(grouped$num_quotes)
mean(grouped$num_quotes)
table(visitors[visitors$sent_request == 1, ]$request_id %in% grouped$request_id)
joined <- dplyr::left_join(grouped,
visitors[visitors$sent_request == 1, ], by = "request_id")
data_out <- function(data, g){
output <-
data %>% dplyr::group_by_(., g) %>%
dplyr::summarize(., avg_quotes = sum(num_quotes) / length(num_quotes))
return(output)
}
plot_out <- function(d, x1, y1 = "avg_quotes"){
plot_graph <-
ggplot(data = d,
aes_string(x = x1, y = y1, fill = x1)) +
guides(fill = F) +
geom_bar(stat = 'identity') + ggtitle(paste("Average Quotes by", x1))
return(plot_graph)
}
cat_data <- data_out(joined, "category_name")
p1 <- plot_out(cat_data, "category_name")
far_data <- data_out(joined, "how_far")
p2 <- plot_out(far_data[far_data$how_far != "", ], "how_far") + coord_flip()
bath_data <- data_out(joined, "num_bathrooms")
p3 <- plot_out(bath_data[bath_data$num_bathrooms != "", ], "num_bathrooms") + coord_flip()
bed_data <- data_out(joined, "num_bedrooms")
p4 <- plot_out(bed_data[bed_data$num_bedrooms != "", ], "num_bedrooms") + coord_flip()
grid.arrange(p1, p2, ncol = 2)
grid.arrange(p3, p4, nrow = 2)
head(joined)
data_out(joined, "category_name")
pdata_joined <- left_join(quotes, visitors[ ,c("category_name","request_id")],
by = "request_id")
outlier_limit <-
IQR(na.omit(pdata_joined$quote_price)) * 1.5 +
summary(pdata_joined$quote_price)[5]
pdata_joined
head(pdata_joind)
head(pdata_joined)
head(quotes)
outlier_limit <-
IQR(na.omit(pdata_joined$quote_price)) * 1.5 +
summary(pdata_joined$quote_price)[5]
outlier_limit
outlier_limit
#To have a reaonable visualization of the density plot
outlier_limit <-
IQR(na.omit(pdata_joined$quote_price)) * 1.5 +
summary(pdata_joined$quote_price)[5]
outlier_limit
ggplot(data = pdata_joined[!is.na(pdata_joined$quote_price), ]) +
geom_density(aes(x = quote_price, fill = category_name), alpha = 0.5) +
xlim(0, outlier_limit) +
ggtitle("Distributions of Quote Prices separated by Category") +
theme(legend.position = "bottom")
pdata_joined
head(pdata_joined)
pdata_joined %>% group_by(., pro_id) %>% filter(., hired == 1)
pdata_joined %>% group_by(., pro_id) %>% filter(., hired == 1) %>% summarise(., num_hired = n())
head(pdata_joined)
pdata_joined %>% group_by(., pro_id)
hired <-
pdata_joined %>% group_by(., pro_id) %>%
filter(., hired == 1) %>% summarise(., num_hired = n())
hired <- mean(hired$num_hired)
head(hired)
hired
hired
move_price <- hired * mean(na.omit(pdata_joined$quote_price)) * 0.03
move_price
hired * mean(na.omit(pdata_joined$quote_price))
move_price
